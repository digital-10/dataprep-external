#
# ============================================================================
# Copyright (C) 2006-2018 Talend Inc. - www.talend.com
#
# This source code is available under agreement available at
# https://github.com/Talend/data-prep/blob/master/LICENSE
#
# You should have received a copy of the agreement
# along with this program; if not, write to Talend SA
# 9 rue Pages 92150 Suresnes, France
#
# ============================================================================
#


choice.hours=Hours
choice.days=Days
choice.months=Months
choice.years=Years
choice.minutes=Minutes
choice.seconds=Seconds

choice.semiColon=Semicolon
choice.tabulation=Tab
choice.space=Space
choice.comma=Comma
choice.pipe=Pipe
choice.dot=Dot
choice.quote=Quote
choice.none=None

choice.CSV=CSV
choice.AVRO=AVRO
choice.PARQUET=PARQUET

parameter.create_new_column.label=Create new column
parameter.create_new_column.desc=Toggle if this function will create a new column or be applied in place

parameter.format.desc=Format
parameter.format.label=Format

parameter.path.desc=Output path
parameter.path.label=Output path

parameter.username.desc=User name
parameter.username.label=User name

parameter.customKeyTab.desc=Keytab
parameter.customKeyTab.label=Keytab

parameter.useKerberos.desc=Use Kerberos
parameter.useKerberos.label=Use Kerberos

parameter.access_key.desc=Access key
parameter.access_key.label=Access key

parameter.secret_key.desc=Secret key
parameter.secret_key.label=Secret key

parameter.s3_bucket.desc=Bucket
parameter.s3_bucket.label=Bucket

parameter.s3_object.desc=Object
parameter.s3_object.label=Object

parameter.region.desc=Region
parameter.region.label=Region

parameter.customRegion.desc=Your custom region
parameter.customRegion.label=Your custom region

choice.customRegion=Custom region

parameter.s3_encrypt_data_at_rest.label=Encrypt data at rest
parameter.s3_encrypt_data_at_rest.desc=Encrypt data at rest

parameter.s3_encrypt_data_in_motion.label=Encrypt data in motion
parameter.s3_encrypt_data_in_motion.desc=Encrypt data in motion

parameter.s3_kms_for_data_at_rest.label=KMS customer master key
parameter.s3_kms_for_data_at_rest.desc=KMS customer master key for data at rest

parameter.s3_kms_for_data_in_motion.label=KMS customer master key
parameter.s3_kms_for_data_in_motion.desc=KMS customer master key for data in motion

parameter.csv_records_delimiter.desc=Record delimiter
parameter.csv_records_delimiter.label=Record delimiter

parameter.custom_csv_records_delimiter.desc=Specific record delimiter
parameter.custom_csv_records_delimiter.label=Specific record delimiter

choice.custom_csv_records_delimiter=Other

parameter.custom_csv_fields_delimiter.desc=Character to use as a delimiter
parameter.custom_csv_fields_delimiter.label=Character to use as a delimiter

parameter.custom_csv_escape_character.desc=Escape character
parameter.custom_csv_escape_character.label=Escape character

parameter.csv_encoding.desc=Charset name for characters encoding
parameter.csv_encoding.label=Encoding

choice.custom_csv_fields_delimiter=Other
choice.LF=LF
choice.CR=CR
choice.CRLF=CRLF

parameter.custom_csv_enclosure_character.desc=Character to use to enclosure text
parameter.custom_csv_enclosure_character.label=Character to use to enclosure text

choice.custom_csv_enclosure_all_fields=All values
choice.custom_csv_enclosure_text_only=Text only

choice.AP_SOUTH_1=Asia Pacific (Mumbai)
choice.AP_SOUTHEAST_1=Asia Pacific (Singapore)
choice.AP_SOUTHEAST_2=Asia Pacific (Sydney)
choice.AP_NORTHEAST_1=Asia Pacific (Tokyo)
choice.AP_NORTHEAST_2=Asia Pacific (Seoul)
choice.CN_NORTH_1=China (Beijing)
choice.EU_WEST_1=EU (Ireland)
choice.EU_WEST_2=EU (London)
choice.EU_CENTRAL_1=EU (Frankfurt)
choice.GovCloud=AWS GovCloud (US)
choice.CA_CENTRAL_1=Canada (Central)
choice.SA_EAST_1=South America (Sao Paulo)
choice.US_EAST_1=US Standard
choice.US_EAST_2=US EAST (Ohio)
choice.US_WEST_1=US West (N. California)
choice.US_WEST_2=US West (Oregon)

parameter.field.delimiter.desc=Field delimiter
parameter.field.delimiter.label=Field delimiter

parameter.record.delimiter.desc=Row delimiter
parameter.record.delimiter.label=Row delimiter
parameter.principal.desc=Specify the principal
parameter.principal.label=Principal
parameter.authentication.desc=Choose the authentication method
parameter.authentication.label=Authentication method

choice.custom_keytab=Custom keytab
choice.default_keytab=Default keytab
choice.simple_authentication=Simple

parameter.name.desc=Name
parameter.name.label=Dataset name

parameter.url.desc=URL
parameter.url.label=Enter the dataset URL
parameter.jobId.desc=Talend Job
parameter.jobId.label=Talend Job

parameter.datasetFile.desc=File
parameter.datasetFile.label=File

parameter.csv_fields_delimiter.desc=Select character to use as a delimiter
parameter.csv_fields_delimiter.label=Field delimiter

parameter.csv_escape_character.desc=Select an escape character
parameter.csv_escape_character.label=Escape character

parameter.csv_enclosure_character.desc=Select a character to enclosure the text
parameter.csv_enclosure_character.label=Text enclosure character

parameter.csv_enclosure_mode.desc=Values to enclose
parameter.csv_enclosure_mode.label=Values to enclose

parameter.fileName.desc=Name of the generated export file
parameter.fileName.label=Filename

parameter.semiColon.label=Semicolon
parameter.tabulation.label=Tab
parameter.space.label=Space
parameter.comma.label=Comma
parameter.pipe.label=Pipe

parameter.user.label=User
parameter.user.desc=Talend Administration Center user used to run job

parameter.password.label=Password
parameter.password.desc=Talend Administration Center user password

#
#implicit parameters
#
parameter.scope.label=Scope
parameter.scope.desc=The transformation scope (CELL | ROW | COLUMN | DATASET)

parameter.row_id.label=Row
parameter.row_id.desc=The row to which you want to apply this action

parameter.column_id.label=Column
parameter.column_id.desc=The column to which you want to apply this action

parameter.column_name.label=Column name
parameter.column_name.desc=The column name to which you want to apply this action

parameter.filter.label=Filter
parameter.filter.desc=An optional filter to apply action on matching values only.


action.minmax_scaler.label=MIN/MAX scaling(Normalization)
action.minmax_scaler.desc=Rescaling data to have values between 0 and 1

action.standard_scaler.label=Standard scaling(Standardization)
action.standard_scaler.desc=Standardization transforms data to have a mean of zero and a standard deviation of 1

action.hash_key_converter.label=Convert keyed-hash message
action.hash_key_converter.desc=Convert data to keyed-hash message(SHA256)

action.standard_code_converter.label=Convert standard code
action.standard_code_converter.desc=Convert code data to actualy values using standard codes

parameter.large_unit.label=Division1
parameter.large_unit.desc=Division1
parameter.midium_unit.label=Division2
parameter.midium_unit.desc=Division2
parameter.small_unit.label=Division3
parameter.small_unit.desc=Division3
parameter.standard_code_id.lable=Code ID
parameter.standard_code_id.desc=Code ID

#
#transformations
#
action.absolute.label=Calculate absolute value
action.absolute.desc=Calculate the absolute value for all the numeric values in this column

action.cut.label=Remove part of the text
action.cut.desc=Remove specified text from cells in this column

action.fillemptywithdefault.label=Fill empty cells with text
action.fillemptywithdefault.desc=Fill empty cells from this column with a given value

action.fillemptywithdefaultboolean.label=Fill empty cells with value
action.fillemptywithdefaultboolean.desc=Fill empty cells from this column with a given value

action.fillemptywithdefaultinteger.label=Fill empty cells with value
action.fillemptywithdefaultinteger.desc=Fill empty cells from this column with a given value

action.fillemptywithdefaultdate.label=Fill empty cells with value
action.fillemptywithdefaultdate.desc=Fill empty cells from this column with a given value

action.fillinvalidwithdefaultboolean.label=Fill invalid cells with value
action.fillinvalidwithdefaultboolean.desc=Fill invalid cells from this column with a given value

action.fillinvalidwithdefaultnumeric.label=Fill invalid cells with value
action.fillinvalidwithdefaultnumeric.desc=Fill invalid cells from this column with a given value

action.fillinvalidwithdefaultdate.label=Fill invalid cells with value
action.fillinvalidwithdefaultdate.desc=Fill invalid cells from this column with a given value

action.fillinvalidwithdefault.label=Fill invalid cells with value
action.fillinvalidwithdefault.desc=Fill invalid cells from this column with a given value

action.fill_with_value.label=Fill cells with value
action.fill_with_value.desc=Fill cells from this column with a given value

action.lowercase.label=Change to lower case
action.lowercase.desc=Converts all of the cell text in this column to lower case

action.uppercase.label=Change to upper case
action.uppercase.desc=Converts all of the cell text in this column to UPPER case (capitalize)

action.propercase.label=Change to title case
action.propercase.desc=Converts the text content from this column to title case (i.e. "data prep" -> "Data Prep")

action.negate.label=Negate value
action.negate.desc=Reverse the boolean value of cells from this column

action.delete_empty.label=Delete the rows with empty cell
action.delete_empty.desc=Delete rows that have empty cells

action.delete_on_value.label=Delete the rows that match
action.delete_on_value.desc=Delete rows where a cell in this column has a specific value
action.delete_on_value.url_parameters=&utm_source=func&pageid=regular_expressions

action.delete_invalid.label=Delete the rows with invalid cell
action.delete_invalid.desc=Delete rows which contain an invalid cell

action.clear_invalid.label=Clear the cells with invalid values
action.clear_invalid.desc=Clear cells that contain a value recognized as invalid

action.delete_all_empty.label=Delete empty rows
action.delete_all_empty.desc=Delete all rows which do not contain any data

action.delete_all_empty_columns.label=Delete empty columns
action.delete_all_empty_columns.desc=Delete all columns that contains only empty values

parameter.action_on_blank_lines.label=Rows containing only non-printing characters
parameter.action_on_blank_lines.desc=Delete rows containing only non-printing characters

parameter.action_on_columns_with_blank.label=Columns containing only non-printing characters
parameter.action_on_columns_with_blank.desc=Delete columns containing only non-printing characters

choice.keep=Keep
choice.delete=Delete

action.remove_negative_values.label=Remove negative values
action.remove_negative_values.desc=Replace negative integers or decimal values with an empty value

#
# Clear action
#
action.clear_matching.label=Clear on matching value
action.clear_matching.desc=Clear cells that match the value
action.clear_matching.url_parameters=&utm_source=func&pageid=regular_expressions

parameter.matching_value.label=Value
parameter.matching_value.desc=The value to compare with

action.trim.label=Remove trailing and leading characters
action.trim.desc=Remove whitespace or other selected characters from both sides of a string (i.e. trim)

action.round.label=Round value using halfup mode
action.round.desc=Round value to the closest value (3.14 -> 3), (3.5 -> 4) and (3.74 -> 4)

action.floor.label=Round value using floor mode
action.floor.desc=Round to lower value (3.14 -> 3) and (3.74 -> 3)

action.ceil.label=Round value using ceil mode
action.ceil.desc=Round to upper value (3.14 -> 4) and (3.74 -> 4)

action.round_down.label=Remove fractional part
action.round_down.desc=Truncate, round towards zero (3.74 -> 3) and (-3.74 -> -3)

action.round_down_real.label=Round value using down mode
action.round_down_real.desc=Round towards zero (3.74 -> 3) and (-3.74 -> -3)

parameter.precision.label=Precision
parameter.precision.desc=Number of digits to add after decimal symbol

action.textclustering.label=Find and group similar text
action.textclustering.desc=Replace all similar values with the right one (i.e. cluster on fuzzy matching)

action.domain_change.label=Change semantic domain
action.domain_change.desc=Change semantic domain of this column (city, zipcode, last name, etc.)

action.type_change.label=Change data type
action.type_change.desc=Change type of this column (number, text, date, etc.)

action.delete_lines.label=Delete these filtered rows
action.delete_lines.desc=Delete only the rows that match the current filters

action.keep_only.label=Keep these filtered rows
action.keep_only.desc=Keep only the rows that match the current filters

parameter.textclustering.title.1=These values have been found
parameter.textclustering.title.2=This value will be kept

parameter.pattern.label=Pattern
parameter.pattern.desc=The pattern to cut in this column

parameter.default_value.label=Value
parameter.default_value.desc=The value to set in cells

parameter.value.label=Value
parameter.value.desc=The value to search

parameter.replaceValue.label=Replace value
parameter.replaceValue.desc=Replace value

action.deduplication.label=Remove duplicate rows
action.deduplication.desc=Keep only one occurrence of duplicated rows

#
# Replace on value action
#
action.replace_on_value.label=Search and replace
action.replace_on_value.desc=Replace cells or parts of cells which contain a specific value
action.replace_on_value.url_parameters=&utm_source=func&pageid=regular_expressions

#
# Replace on value action
#
action.replace_nlp_on_value.label=\uc790\uc5f0\uc5b4\ucc98\ub9ac 
action.replace_nlp_on_value.desc=Replace cells or parts of cells which contain a specific value
action.replace_nlp_on_value.url_parameters=&utm_source=func&pageid=regular_expressions

parameter.cell_value.label=Search for
parameter.cell_value.desc=The current value

parameter.replace_value.label=Replace with
parameter.replace_value.desc=The new value to set

parameter.replace_entire_cell.label=Overwrite entire cell
parameter.replace_entire_cell.desc=Defines greedy level. If checked, it will overwrite the entire cell, if not, it will only replace the part of the value that matches
#
# Replace cell value action
#
action.replace_cell_value.label=Replace value
action.replace_cell_value.desc=Replace value
parameter.original_value.label=Current
parameter.original_value.desc=The current cell value
parameter.new_value.label=Replacement
parameter.new_value.desc=The new value to set

#
# rename action
#
action.rename_column.label=Rename column
action.rename_column.desc=Rename this column

parameter.new_column_name.label=New name
parameter.new_column_name.desc=The new column name

#
# split action
#
action.split.label=Split the text in parts
action.split.desc=Split the value in multiple columns based on the number of separators

parameter.separator.label=Separator
parameter.separator.desc=Character, litteral or regex to use as separator

choice.other_string=Other (string)
choice.other_regex=Other (regex)

parameter.manual_separator_string.label=Manual separator
parameter.manual_separator_string.desc=Choose your own separator

parameter.manual_separator_regex.label=Manual separator
parameter.manual_separator_regex.desc=Choose your own separator

parameter.limit.label=Parts
parameter.limit.desc=Number of parts to split the value in

choice.custom=Other

#
# extract email domain action
#
action.extractemaildomain.label=Extract email parts
action.extractemaildomain.desc=Extract local and domain parts from an email address

#
# Duplicate column action
#
action.copy.label=Duplicate column
action.copy.desc=Create an exact copy of this column

#
# Duplicate column action123
#
action.copy_nlp.label=\uc790\uc5f0\uc5b4\ucc98\ub9ac
action.copy_nlp.desc=\uc790\uc5f0\uc5b4\ucc98\ub9ac\ubaa8\ub4c8 

#
# change date pattern action
#
action.change_date_pattern.label=Change date format
action.change_date_pattern.desc=Change the date format to use in a date column
action.change_date_pattern.url_parameters=&utm_source=func&pageid=date_formats

parameter.from_pattern_mode.label=Current format
parameter.from_pattern_mode.desc=Select your current date format

choice.from_custom_mode=Define my own format

parameter.from_custom_pattern.label=Your format
parameter.from_custom_pattern.desc=e.g. dd/MM/yyyy for day/month/year

parameter.new_pattern.label=New format
parameter.new_pattern.desc=Choose the date format to use in the list or make your own

parameter.custom_date_pattern.label=Your format
parameter.custom_date_pattern.desc=e.g. dd/MM/yyyy for day/month/year

#
# Extract date tokens action
#
action.extract_date_tokens.label=Extract date parts
action.extract_date_tokens.desc=Create columns with year, month, day, hour, minute, second, etc.

parameter.YEAR.label=Year
parameter.YEAR.desc=Extract year from date (08/24/2015 -> 2015)
parameter.QUARTER.label=Quarter of the year
parameter.QUARTER.desc=Extract quarter of the year from date (08/24/2015 -> 3)

parameter.MONTH.label=Month of the year
parameter.MONTH.desc=Extract month of the year from date (08/24/2015 -> 8)

parameter.DAY.label=Day of the month
parameter.DAY.desc=Extract day of the month from date (08/24/2015 -> 24)
parameter.MONTH_LABEL.label=Name of the month
parameter.MONTH_LABEL.desc=Extract the name of the month from date (08/24/2015 -> August)
parameter.DAY_LABEL.label=Name of the day
parameter.DAY_LABEL.desc=Extract the name of the day from date (08/24/2015 -> Monday)

parameter.HOUR_12.label=Hour of the day (12-hour clock)
parameter.HOUR_12.desc=Extract the hour of the day (from an AM/PM format), from 0 to 11
parameter.AM_PM.label=am (0) or pm (1)
parameter.AM_PM.desc=Extract the AM/PM information of the day, from 0 (AM) to 1 (PM)
parameter.HOUR_24.label=Hour of the day (24-hour clock)
parameter.HOUR_24.desc=Extract the hour of the day, from 0 to 23

parameter.MINUTE.label=Minute
parameter.MINUTE.desc=Extract minute from hour

parameter.SECOND.label=Second
parameter.SECOND.desc=Extract second from minute

parameter.DAY_OF_WEEK.label=Day of the week
parameter.DAY_OF_WEEK.desc=Extract the day of week, (1, 2, ... , 7)

parameter.DAY_OF_YEAR.label=Day of the year
parameter.DAY_OF_YEAR.desc=Extract the day of year. This has values from 1 to 365 in standard years and 1 to 366 in leap years

parameter.WEEK_OF_YEAR.label=Week of the year
parameter.WEEK_OF_YEAR.desc=Extract the week number of the year

parameter.LANGUAGE.label=Language
parameter.LANGUAGE.desc=Language for the month and day names

#
# Substring action
#
action.substring.label=Extract parts of the text
action.substring.desc=Extract some parts of the text (substring) and create a new column

parameter.from_mode.label=From
parameter.from_mode.desc=Select beginning mode of the substring

parameter.from_index.label=Beginning index
parameter.from_index.desc=Index of the original value that starts the new one

parameter.from_n_before_end.label=From N before end
parameter.from_n_before_end.desc=Enter 5 if you want to start 5 characters before end (useful to keep only last N characters)

parameter.to_mode.label=To
parameter.to_mode.desc=Select end mode of the substring

parameter.to_index.label=End index
parameter.to_index.desc=Index of the original value that ends the new one

parameter.to_n_before_end.label=To N before end
parameter.to_n_before_end.desc=Enter 2 if you want to end 2 characters before end

choice.from_beginning=From beginning
choice.from_index=From index
choice.from_n_before_end=From N before end
choice.to_end=To end
choice.to_index=To index
choice.to_n_before_end=To N before end

#
# Calculate length action
#
action.compute_length.label=Calculate length
action.compute_length.desc=Extract the number of digits from a value (23562 -> 5)

#
# Calculate time since action
#
action.compute_time_since.label=Calculate time since
action.compute_time_since.desc=Calculate elapsed time until a date, in the desired unit (year, month, day, hour)

parameter.time_unit.label=Time unit
parameter.time_unit.desc=The unit in which you want the result

parameter.since_when.label=Until
parameter.since_when.desc=Specify the date to compare to

parameter.specific_date.label=This date
parameter.specific_date.desc=Set here the date to compare to

choice.now_server_side=Now
choice.specific_date=Specific date

#
# Extract url tokens
#
action.extract_url_tokens.label=Extract URL parts
action.extract_url_tokens.desc=Extract protocol, host, port, query, etc. from an URL in separated columns

#
# Extract string tokens
#
action.extract_string_tokens.label=Extract string parts
action.extract_string_tokens.desc=Extract string tokens based on regex groups
action.extract_string_tokens.url_parameters=&utm_source=func&pageid=regular_expressions

parameter.regex.label=Regex
parameter.regex.desc=Regex used to extract groups (#(\w+) for hashtags)

parameter.extract_mode.label=Extract to
parameter.extract_mode.desc=Define if each token will be in a dedicated column or all combined in a single one
choice.multiple_columns=Multiple columns
choice.single_column=A single column

#
# Calculate timestamp to date
#
action.timestamp_to_date.label=Calculate timestamp to date
action.timestamp_to_date.desc=Given a timestamp (elapsed time since epoch in seconds), create a new column with the date
action.timestamp_to_date.url_parameters=&utm_source=func&pageid=date_formats

#
# Remove non numeric chars
#
action.remove_non_num_chars.label=Remove non numeric characters
action.remove_non_num_chars.desc=For example \u00e2\u201a\u00ac10.5k will become 10.5

#
# Remove non alpha-numeric chars
#
action.remove_non_alpha_num_chars.label=Remove non alpha numeric characters
action.remove_non_alpha_num_chars.desc=For example \u00e2\u201a\u00ac10.5k will become 105


#
# Normalize
#
action.normalize.label=Simplify text (remove case, accent, etc.)
action.normalize.desc=Simplify the content of this column (ie: Fran\u00c3\u00a7ois -> francois)

#
# Concat
#
action.concat.label=Concatenate with
action.concat.desc=Join this column with another one

parameter.selected_column.label=Column
parameter.selected_column.desc=Combine the current column with this one

parameter.prefix.label=Prefix
parameter.prefix.desc=Optional new column prefix

parameter.concat_separator.label=Separator
parameter.concat_separator.desc=String to use to separate values

parameter.suffix.label=Suffix
parameter.suffix.desc=Optional new column suffix

choice.other_column_mode=Other column
choice.constant_mode=Value

choice.a_constant_mode=A constant
choice.empty_mode=Nothing, this column will be empty

parameter.concat_separator_condition.label=Add separator
parameter.concat_separator_condition.desc=Condition for adding separator
choice.concat_both_not_empty=Both values not empty
choice.concat_always=Always

#
# matches pattern action
#
action.matches_pattern.label=Matches pattern
action.matches_pattern.desc=Create a new column with <i>true</i> or <i>false</i> depending on whether the value matches a given pattern
action.matches_pattern.url_parameters=&utm_source=func&pageid=regular_expressions

parameter.proposed_pattern.label=Pattern
parameter.proposed_pattern.desc=Pattern to use

parameter.manual_pattern.label=Manual pattern
parameter.manual_pattern.desc=Set your own pattern

choice.[a-z]+=[a-z]+ (a word in lowercase)
choice.[A-Z]+=[A-Z]+ (a word in uppercase)
choice.[0-9]+=[0-9]+ (number)
choice.[a-zA-Z]+=[a-zA-Z]+ (any word, case insensitive)
choice.[a-zA-Z0-9]+=[a-zA-Z0-9]+ (any literal with alpha-numeric characters)

#
# contains action
#
action.contains.label=Contains text
action.contains.desc=Check if the cell contains the specified value

#
# Delete negative values
#
action.delete_negative_values.label=Delete the rows with negative values
action.delete_negative_values.desc=Rows with a negative value in this column will be deleted

#
# Numeric operations
#
action.numeric_ops.label=Add, multiply, subtract or divide
action.numeric_ops.desc=Perform an operation/calculation on this column with another one or with a fixed value: Add/sum (+), multiply (x), subtract (-), or divide(/)

parameter.operator.label=Operator
parameter.operator.desc=Operator to use for this operation

parameter.mode.label=Use with
parameter.mode.desc=Select if you want to use a value or another column

parameter.operand.label=Operand
parameter.operand.desc=Fixed value to use as operand

#
# Modulo
#
action.modulo.label=Modulo
action.modulo.desc=Computing the resulting modulo of a division

parameter.modeModulo.label=Divisor
parameter.modeModulo.desc=Use a value or another column

parameter.divisor.label=Value
parameter.divisor.desc=Value to use as operand

#
# Padding
#
action.padding.label=Add extra characters
action.padding.desc=Add extra characters (padding) on the left or on the right of the original value to match an expected size

parameter.size.label=Size
parameter.size.desc=Expected size of the value (values too long will not be truncated)

parameter.padding_char.label=Added character
parameter.padding_char.desc=The character to add

parameter.padding_position.label=Position
parameter.padding_position.desc=Either prepend (add on the left) or append (add on the right)

choice.left=Left
choice.right=Right

#
# Delete column
#
action.delete_column.label=Delete column
action.delete_column.desc=Delete this column

#
# Delete single line
#
action.delete_single_line.label=Delete row
action.delete_single_line.desc=Delete this row

#
# lookup
#
action.lookup.label=Lookup
action.lookup.desc=Blends columns from another dataset into this one

parameter.lookup_ds_name.label=Lookup dataset name
parameter.lookup_ds_name.desc=Lookup dataset name

parameter.lookup_ds_id.label=Lookup dataset id
parameter.lookup_ds_id.desc=Lookup dataset id

parameter.lookup_ds_url.label=Lookup dataset URL
parameter.lookup_ds_url.desc=Lookup dataset URL

parameter.lookup_join_on.label=Lookup column join
parameter.lookup_join_on.desc=Lookup column join

parameter.lookup_join_on_name.label=Lookup column join name
parameter.lookup_join_on_name.desc=Lookup column join name

parameter.lookup_selected_cols.label=Lookup selected columns
parameter.lookup_selected_cols.desc=Lookup selected columns

#
# create new column
#
action.create_new_column.label=Create new column
action.create_new_column.desc=Copy a column, or create a brand new one

parameter.create_new_column_name.label=New column name
parameter.create_new_column_name.desc=Name of the new column 

parameter.mode_new_column.label=Fill new column with
parameter.mode_new_column.desc=Select with which data you new column will be filled with

choice.sequence_mode=A sequence

#
# make this line the header
#
action.make_line_header.label=Make as header
action.make_line_header.desc=Cells of this row will become columns names, the row will be deleted

parameter.make_line_header_skip_until.label=Skip previous rows
parameter.make_line_header_skip_until.desc=Previous rows will be deleted

#
# change number format
#
action.change_number_format.label=Format numbers
action.change_number_format.desc=Allow to format number (decimal, integer & scientific) in a specific format or pattern

parameter.from_separators.label=Current separators
parameter.from_separators.desc=Current separators

parameter.from_decimal_separator.label=Decimal separator
parameter.from_decimal_separator.desc=Character used for decimal sign
parameter.from_decimal_separator_custom.label=Custom decimal separator
parameter.from_decimal_separator_custom.desc=Character used for decimal sign

parameter.from_grouping_separator.label=Grouping separator
parameter.from_grouping_separator.desc=Character used for thousands separator
parameter.from_grouping_separator_custom.label=Custom grouping separator
parameter.from_grouping_separator_custom.desc=Character used for thousands separator

parameter.target_pattern.label=Target format
parameter.target_pattern.desc=Define the format to use to format the number

parameter.target_pattern_custom.label=Custom target format
parameter.target_pattern_custom.desc=Define the format to use to format the number

parameter.target_decimal_separator.label=Decimal separator
parameter.target_decimal_separator.desc=Character used for decimal sign
parameter.target_decimal_separator_custom.label=Custom decimal separator
parameter.target_decimal_separator_custom.desc=Character used for decimal sign

parameter.target_grouping_separator.label=Grouping separator
parameter.target_grouping_separator.desc=Character used for thousands separator
parameter.target_grouping_separator_custom.label=Custom grouping separator
parameter.target_grouping_separator_custom.desc=Character used for thousands separator

choice.unknown_separators=I don''t know, best guess
choice.us_separators=1,545.12 (US, UK, China, etc.)
choice.eu_separators=1 545,12 (France, Russia, etc.)
choice.ch_separators=1''545.12 (Switzerland)

choice.us_pattern=1,545.12 (US, UK, China, etc.)
choice.eu_pattern=1 545,12 (France, Russia, etc.)
choice.ch_pattern=1''545.12 (Switzerland)
choice.scientific=Scientific

#
# compare numbers
#
action.compare_numbers.label=Compare numbers
action.compare_numbers.desc=Compare this column to another column or a value

parameter.compare_mode.label=Compare mode
parameter.compare_mode.desc=Choose your compare mode in this list

parameter.constant_value.label=Value
parameter.constant_value.desc=Value to compare with

choice.eq=equals
choice.ne=not equals
choice.gt=greater than
choice.ge=greater or equals than
choice.lt=lower than
choice.le=lower or equals than

#
# Fuzzy matching
#
action.fuzzy_matching.label=Match similar text
action.fuzzy_matching.desc=Create a new column with <i>true</i> or <i>false</i> depending if the value is less than or equal to the Levenshtein distance of a given value

parameter.reference_value.label=Reference
parameter.reference_value.desc=The value to calculate Levenshtein distance with

parameter.sensitivity.label=Fuzziness
parameter.sensitivity.desc=Tolerance for the matching (0 means equals, 1 means one characters differs, etc.)

#
# Compare dates
#

action.compare_dates.label=Compare dates
action.compare_dates.desc=Compare this column to another column or a value

choice.date.eq=equals
choice.date.ne=not equals
choice.date.gt=after
choice.date.ge=after or equals
choice.date.lt=before
choice.date.le=before or equals

#
# Extract number
#
action.extract_number.label=Extract number
action.extract_number.desc=Extract number from the input

parameter.decimal_separator.label=Decimal separator
parameter.decimal_separator.desc=The decimal separator used in the input

#
# ReorderColumn
#
action.reorder.label=Reorder columns
action.reorder.desc=Change column order

#
# Swap columns
#
action.swap_column.label=Swap columns
action.swap_column.desc=Swap the values with an other column

#
# Data masking
#
action.mask_data_by_domain.label=Mask data (obfuscation)
action.mask_data_by_domain.desc=Mask data according to the domain information of the column (anonymisation)
action.hash_data.label=Hash data
action.hash_data.desc=Hash the selected column's content using SHA-256

#
# Format phone number
#
action.format_phone_number.label=Format phone number
action.format_phone_number.desc=Format a phone number to standard formats

action.extract_phone_information.label=Extract phone number information
action.extract_phone_information.desc= Extract information from a phone number (available for DE, FR, UK and US)

parameter.phone_type.label=Phone number type
parameter.phone_type.desc=Phone number type (landline, cellular/mobile, VoIP ...)

parameter.phone_country.label=Phone number country
parameter.phone_country.desc=Phone number country

parameter.phone_region.label=Phone number region
parameter.phone_region.desc =Phone number region

parameter.phone_geographicArea.label=Phone number geographic area
parameter.phone_geographicArea.desc =Phone number geographic area

parameter.phone_carrierName.label=Phone number carrier name
parameter.phone_carrierName.desc=Phone number carrier name

parameter.phone_timezone.label=Phone number timezones
parameter.phone_timezone.desc=Phone number timezones

parameter.region_code.label=Region code
parameter.region_code.desc=Region code such as US, UK, FR, DE ...
choice.other_region=Other (region)

parameter.format_type.label=Format type
parameter.format_type.desc=The expected phone format such as national, international ...
choice.international=International
choice.national=National

parameter.manual_region_string.label=Custom region code
parameter.manual_region_string.desc=Region code such as US, UK, FR, DE ...

#
# Max
#
action.max_numbers.label=Max
action.max_numbers.desc=Max with another column or a value

#
# Min
#
action.min_numbers.label=Min
action.min_numbers.desc=Min with another column or a value

#
# Pow
#
action.pow_numbers.label=Power
action.pow_numbers.desc=Power with another column or a value

#
# Negate
#
action.negate_numbers.label=Negate
action.negate_numbers.desc=Negate a column number

#
# SquareRoot
#
action.square_root_numbers.label=Square root
action.square_root_numbers.desc=Square root of a column number

#
# Exponential
#
action.exponential_numbers.label=Exponential
action.exponential_numbers.desc=Exponential of a column number

#
# Logarithm
#
action.logarithm_numbers.label=Base 10 logarithm
action.logarithm_numbers.desc=Compute the base 10 logarithm from a column

#
# Natural Logarithm
#
action.natural_logarithm_numbers.label=Natural logarithm
action.natural_logarithm_numbers.desc=Compute the natural logarithm from a column

#
# Cosine
#
action.cos_numbers.label=Cosine
action.cos_numbers.desc=Compute the trigonometric cosine from a column

#
# Sine
#
action.sin_numbers.label=Sine
action.sin_numbers.desc=Compute the trigonometric sine from a column

#
# Tangent
#
action.tan_numbers.label=Tangent
action.tan_numbers.desc=Compute the trigonometric tangent from a column

#
# Modify date
#
action.modify_date.label=Modify date
action.modify_date.desc=Add or substract time unit amount


choice.ISO=ISO 8601 date
choice.ISO_time=ISO 8601 date & time

choice.DE=German standard
choice.DE_time=German standard with time

choice.JP=Japanese standard
choice.JP_time=Japanese standard with time

choice.FR=French/British standard
choice.FR_time=French/British standard with time

choice.US=American standard
choice.US_time=American standard with time

choice.GB=English standard

#
# Conversions
#
action.temperatures_converter.label=Convert temperature
action.temperatures_converter.desc=Converts this column values to another temperature unit
parameter.from_temperature.label=From
parameter.from_temperature.desc=This column unit
parameter.to_temperature.label=To
parameter.to_temperature.desc=Target conversion unit
choice.Fahrenheit=Fahrenheit
choice.Celsius=Celsius
choice.Kelvin=Kelvin

#
# trim
#
parameter.padding_character.label=Padding character
parameter.padding_character.desc=Character to remove
parameter.custom_padding_character.label=Custom padding character
parameter.custom_padding_character.desc=Specify your own custom padding character
choice.whitespace=Whitespace

#
# date calendar converter action
#
action.date_calendar_converter.label=Convert date
action.date_calendar_converter.desc=Convert date from one calendar to another. Available calendars are: Gregorian, Hijri, \
                                    Japanese, Minguo and ThaiBuddhist
action.date_calendar_converter.url_parameters=&utm_source=func&pageid=convert_dates
parameter.from_calendar_type.label=Source calendar
parameter.from_calendar_type.desc=The current date''s calendar type
parameter.to_calendar_type.label=Target calendar
parameter.to_calendar_type.desc=Define the new calendar type to use for converting date
choice.IsoChronology=Gregorian calendar
choice.HijrahChronology=Hijri calendar
choice.JapaneseChronology=Japanese calendar
choice.MinguoChronology=Minguo calendar
choice.ThaiBuddhistChronology=ThaiBuddhist calendar
choice.JulianDay=Julian day
choice.ModifiedJulianDay=Modified Julian day
choice.RataDie=Rata die
choice.EpochDay=Epoch day
choice.datePatternISO=yyyy-MM-dd
choice.datePatternUS=M/d/yy
choice.datePatternFR=dd/MM/yy
choice.datePatternDE=dd.MM.yy
choice.datePatternGB=dd/MM/yy
choice.datePatternJP=yy/MM/dd
choice.datePattern1=yyyy/MM/dd
choice.datePattern2=dd/MM/yyyy
choice.datePattern3=MM/dd/yyyy
choice.datePattern4=yyyy MM dd
choice.datePattern5=yyyyMMdd

#
# Distance converter
#
action.distance_converter.label=Convert distance
action.distance_converter.desc=Convert distance from one unit to another
parameter.from_unit.label=From
parameter.from_unit.desc=This column unit
parameter.to_unit.label=To
parameter.to_unit.desc=Target conversion unit
choice.mm=Millimeter
choice.cm=Centimeter
choice.dm=Decimeter
choice.m=Meter
choice.dam=Dekameter
choice.hm=Hectometer
choice.km=Kilometer
choice.in=Inch
choice.ft=Foot
choice.yd=Yard
choice.mi=Mile
choice.nm=Nautical mile
choice.ly=Light-year

#
# remove consecutive repeated chars
#
action.remove_repeated_chars.label=Remove consecutive characters
action.remove_repeated_chars.desc=Remove/delete consecutive repeated characters
parameter.remove_type.label=Repeated character
parameter.remove_type.desc=Choose the type of repeated characters
parameter.custom_repeat_chars.label=Custom repeated characters
parameter.custom_repeat_chars.desc=Specify your own custom repeated characters

#
# duration converter action
#
action.duration_converter.label=Convert duration
action.duration_converter.desc=Convert duration from one unit to another
choice.Millis=Millisecond
choice.Seconds=Second
choice.Minutes=Minute
choice.Hours=Hour
choice.Days=Day
choice.Weeks=Week
choice.Months=Month
choice.Years=Year

#
# fill empty cell from above
#
action.fill_empty_from_above.label=Fill empty cells from above
action.fill_empty_from_above.desc=Fill empty cells with values from previous cell

#
# generate a sequence
#
action.generate_a_sequence.label=Generate sequence
action.generate_a_sequence.desc=Generate a sequence of numeric values
parameter.start_value.label=Starting value
parameter.start_value.desc=Starting value of the sequence
parameter.step_value.label=Step
parameter.step_value.desc=Step of each row

#
# categories
#
category.column_metadata.label=column metadata
category.columns.label=columns
category.math.label=math
category.numbers.label=numbers
category.strings.label=strings
category.strings_advanced.label=strings advanced
category.split.label=split
category.dates.label=dates
category.boolean.label=boolean
category.data_cleansing.label=data cleansing
category.filtered.label=filtered
category.data_blending.label=data blending
category.data_masking.label=data masking
category.phones.label=phones
category.conversions.label=conversions
category.deduplication.label=deduplication
category.natural_language_processing.label=\uc790\uc5f0\uc5b4\ucc98\ub9ac

#
# standardize value by finding the closest valid value
#
action.standardize_value.label=Standardize value (fuzzy matching)
action.standardize_value.desc=Replace invalid values with the most similar valid value in the dictionary
parameter.match_threshold.label=Match threshold
parameter.match_threshold.desc=The match distance should be greater than or equal to the threshold
choice.high_match=High (> 90%)
choice.default_match=Default (> 80%)
choice.none_match=None (closest match)

